<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="JMeter Testplan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="jmeter.run.id" elementType="Argument">
            <stringProp name="Argument.name">jmeter.run.id</stringProp>
            <stringProp name="Argument.value">${__UUID()}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jmeter.log.jtl" elementType="Argument">
            <stringProp name="Argument.name">jmeter.log.jtl</stringProp>
            <stringProp name="Argument.value">${__P(jmeter.log.jtl,../../build/result.jtl)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jmeter.server" elementType="Argument">
            <stringProp name="Argument.name">jmeter.server</stringProp>
            <stringProp name="Argument.value">${__P(jmeter.server,awesomeshop.qafoo.local)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jmeter.users" elementType="Argument">
            <stringProp name="Argument.name">jmeter.users</stringProp>
            <stringProp name="Argument.value">${__P(jmeter.users,5)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jmeter.time.rampup" elementType="Argument">
            <stringProp name="Argument.name">jmeter.time.rampup</stringProp>
            <stringProp name="Argument.value">${__P(jmeter.time.rampup,60)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jmeter.time.execution" elementType="Argument">
            <stringProp name="Argument.name">jmeter.time.execution</stringProp>
            <stringProp name="Argument.value">${__P(jmeter.time.execution,60)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="crawler.usertype.a.starting.uri" elementType="Argument">
            <stringProp name="Argument.name">crawler.usertype.a.starting.uri</stringProp>
            <stringProp name="Argument.value">${__P(crawler.usertype.a.starting.uri,/)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="crawler.usertype.a.breadth" elementType="Argument">
            <stringProp name="Argument.name">crawler.usertype.a.breadth</stringProp>
            <stringProp name="Argument.value">${__P(crawler.usertype.a.breadth,2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="crawler.usertype.a.depth" elementType="Argument">
            <stringProp name="Argument.name">crawler.usertype.a.depth</stringProp>
            <stringProp name="Argument.value">${__P(crawler.usertype.a.depth,3)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Default Einstellungen" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${jmeter.server}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">/</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.embedded_url_re">https?://(${jmeter.server}/out|media\.awesome-shop\.local/is|cdn\.awesome-shop\.local)(/?[^\?]*)</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/34.0.1847.116 Chrome/34.0.1847.116 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-JMeter-RunID</stringProp>
            <stringProp name="Header.value">${jmeter.run.id}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Random Surfer" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${jmeter.users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${jmeter.time.rampup}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${jmeter.time.execution}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1439982518000</longProp>
        <longProp name="ThreadGroup.end_time">1439982518000</longProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Generic Crawler Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="crawler.automatic.starting.uri" elementType="Argument">
              <stringProp name="Argument.name">crawler.automatic.starting.uri</stringProp>
              <stringProp name="Argument.value">${crawler.usertype.a.starting.uri}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="crawler.automatic.breadth" elementType="Argument">
              <stringProp name="Argument.name">crawler.automatic.breadth</stringProp>
              <stringProp name="Argument.value">${crawler.usertype.a.breadth}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="crawler.automatic.depth" elementType="Argument">
              <stringProp name="Argument.name">crawler.automatic.depth</stringProp>
              <stringProp name="Argument.value">${crawler.usertype.a.depth}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Generic Crawler (Automatic)" enabled="true">
          <stringProp name="TestPlan.comments">Provides a generic controller that starts on a given page and from there crawles random sub-pages</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Generic Crawler Variables (Automatic)" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="crawler.automatic.breadth.offset" elementType="Argument">
                <stringProp name="Argument.name">crawler.automatic.breadth.offset</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crawler.automatic.depth.offset" elementType="Argument">
                <stringProp name="Argument.name">crawler.automatic.depth.offset</stringProp>
                <stringProp name="Argument.value">-1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Crawl Starting Page (Automatic)" enabled="true">
            <stringProp name="TestPlan.comments">Opens a configured startpage from which the crawler extracts all links for the consecutive load tests requests.</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crawl Starting Page (${crawler.automatic.starting.uri})" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${crawler.automatic.starting.uri}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract URIs from Starting Page " enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">crawler.automatic.level0.uri</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;a[^&gt;]*\shref=&quot;(/[^&quot;]+)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Breadth First Crawler Loop (Automatic)" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${crawler.automatic.breadth}</stringProp>
          </LoopController>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Breadth Loop Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="426100870">crawler.automatic.breadth.offset</stringProp>
                <stringProp name="-300499057">crawler.automatic.depth.offset</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-575078526">
                  <stringProp name="-67142676">${__intSum(1,${crawler.automatic.breadth.offset},crawler.automatic.breadth.offset)}</stringProp>
                  <stringProp name="1444">-1</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Depth First Crawler Loop (Automatic)" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${crawler.automatic.depth}</stringProp>
            </LoopController>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Depth Loop Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-300499057">crawler.automatic.depth.offset</stringProp>
                  <stringProp name="-759255297">crawler.automatic.match.current</stringProp>
                  <stringProp name="-664982963">crawler.automatic.match.offset</stringProp>
                  <stringProp name="985769997">crawler.automatic.extracted.uri</stringProp>
                  <stringProp name="-1314687187">crawler.automatic.match.next</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="16154229">
                    <stringProp name="-576467252">${__intSum(1,${crawler.automatic.depth.offset},crawler.automatic.depth.offset)}</stringProp>
                    <stringProp name="-2123334250">crawler.automatic.level${crawler.automatic.depth.offset}.uri</stringProp>
                    <stringProp name="-967112761">${__Random(1,${__V(${crawler.automatic.match.current}_matchNr)})}</stringProp>
                    <stringProp name="-800913156">${__V(${crawler.automatic.match.current}_${crawler.automatic.match.offset})}</stringProp>
                    <stringProp name="270580820">crawler.automatic.level${__intSum(1,${crawler.automatic.depth.offset})}.uri</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">true</boolProp>
              </UserParameters>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crawl URI (${crawler.automatic.extracted.uri})" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${__unescapeHtml(${crawler.automatic.extracted.uri})}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract URIs from Sub Page" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">${crawler.automatic.match.next}</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;a[^&gt;]*\shref=&quot;(/[^&quot;]+)&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">250</stringProp>
            <stringProp name="RandomTimer.range">100.0</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">1000</stringProp>
        <stringProp name="RandomTimer.range">500</stringProp>
      </GaussianRandomTimer>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">${jmeter.log.jtl}</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
