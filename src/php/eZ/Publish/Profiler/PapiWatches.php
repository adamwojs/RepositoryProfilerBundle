<?php

\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::internalLoadContentInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentInfoByRemoteId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadVersionInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadVersionInfoById');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentByContentInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentByVersionInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::internalLoadContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentByRemoteId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::createContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::updateContentMetadata');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::deleteContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::createContentDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadContentDrafts');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::translateVersion');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::updateContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::publishVersion');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::deleteVersion');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadVersions');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::copyContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadRelations');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadReverseRelations');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::addRelation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::deleteRelation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::addTranslationInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::loadTranslationInfos');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::newContentCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::newContentMetadataUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::newContentUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::newTranslationInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentService::newTranslationValues');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::createContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeGroupByIdentifier');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeGroups');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::updateContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::deleteContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::createContentType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeByIdentifier');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeByRemoteId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypeDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::loadContentTypes');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::createContentTypeDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::updateContentTypeDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::deleteContentType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::copyContentType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::assignContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::unassignContentTypeGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::addFieldDefinition');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::removeFieldDefinition');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::updateFieldDefinition');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::publishContentTypeDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newContentTypeGroupCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newContentTypeCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newContentTypeUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newContentTypeGroupUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newFieldDefinitionCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::newFieldDefinitionUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ContentTypeService::isContentTypeUsed');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\FieldTypeService::getFieldTypes');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\FieldTypeService::getFieldType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\FieldTypeService::hasFieldType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::createLanguage');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::updateLanguageName');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::enableLanguage');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::disableLanguage');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::loadLanguage');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::loadLanguages');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::loadLanguageById');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::deleteLanguage');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::getDefaultLanguageCode');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::getPrioritizedLanguageCodeList');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LanguageService::newLanguageCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::copySubtree');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::loadLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::loadLocationByRemoteId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::loadLocations');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::loadLocationChildren');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::getLocationChildCount');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::createLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::updateLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::swapLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::hideLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::unhideLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::moveSubtree');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::deleteLocation');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::newLocationCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\LocationService::newLocationUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::createObjectStateGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::loadObjectStateGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::loadObjectStateGroups');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::loadObjectStates');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::updateObjectStateGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::deleteObjectStateGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::createObjectState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::loadObjectState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::updateObjectState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::setPriorityOfObjectState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::deleteObjectState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::setContentState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::getContentState');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::getContentCount');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::newObjectStateGroupCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::newObjectStateGroupUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::newObjectStateCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\ObjectStateService::newObjectStateUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::createRole');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::createRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRoleDraftByRoleId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::updateRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::addPolicyByRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::removePolicyByRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::updatePolicyByRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::deleteRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::publishRoleDraft');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::updateRole');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::addPolicy');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::removePolicy');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::deletePolicy');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::updatePolicy');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRole');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRoleByIdentifier');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRoles');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::deleteRole');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadPoliciesByUserId');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::assignRoleToUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::unassignRoleFromUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::assignRoleToUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::unassignRoleFromUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::removeRoleAssignment');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::loadRoleAssignment');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::getRoleAssignments');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::getRoleAssignmentsForUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::getRoleAssignmentsForUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::newRoleCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::newPolicyCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::newPolicyUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::newRoleUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::getLimitationType');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\RoleService::getLimitationTypesByModuleFunction');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SearchService::findContent');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SearchService::findContentInfo');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SearchService::findSingle');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SearchService::suggest');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SearchService::findLocations');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::createSection');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::updateSection');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::loadSection');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::loadSections');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::loadSectionByIdentifier');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::countAssignedContents');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::isSectionUsed');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::assignSection');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::deleteSection');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::newSectionCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\SectionService::newSectionUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::loadTrashItem');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::trash');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::recover');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::emptyTrash');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::deleteTrashItem');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\TrashService::findTrashItems');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::createUrlAlias');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::createGlobalUrlAlias');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::listLocationAliases');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::listGlobalAliases');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::removeAliases');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::lookup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::reverseLookup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLAliasService::load');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLWildcardService::create');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLWildcardService::remove');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLWildcardService::load');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLWildcardService::loadAll');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\URLWildcardService::translate');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::createUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadSubUserGroups');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::deleteUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::moveUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::updateUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::createUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadAnonymousUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUserByCredentials');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUserByLogin');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUsersByEmail');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::deleteUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::updateUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::assignUserToUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::unAssignUserFromUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUserGroupsOfUser');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::loadUsersOfUserGroup');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::newUserCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::newUserGroupCreateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::newUserUpdateStruct');
\Tideways\Profiler::watch('eZ\Publish\Core\Repository\UserService::newUserGroupUpdateStruct');
